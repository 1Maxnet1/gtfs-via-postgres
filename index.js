'use strict'

const sequencify = require('sequencify')
const readCsv = require('gtfs-utils/read-csv')
const {Stringifier} = require('csv-stringify')
const formatters = require('./lib')
const getDependencies = require('./lib/deps')
const pkg = require('./package.json')

const convertGtfsToSql = async (files, opt = {}) => {
	opt = {
		silent: false,
		requireDependencies: false,
		ignoreUnsupportedFiles: false,
		...opt,
	}
	const {
		silent,
		requireDependencies,
		ignoreUnsupportedFiles,
	} = opt

	const deps = getDependencies(opt)
	if (ignoreUnsupportedFiles) {
		files = files.filter(f => !!formatters[f.name])
	}
	const isAvailable = name => files.some(f => f.name === name)
	for (const {name} of files) {
		if (!formatters[name]) {
			throw new Error('invalid/unsupported file: ' + name)
		}
		if (requireDependencies) {
			for (const dep of deps[name] || []) {
				if (!isAvailable(dep)) {
					throw new Error(name + ' depends on ' + dep)
				}
			}
		}
	}

	const tasks = {}
	for (const file of files) {
		tasks[file.name] = {
			...file,
			dep: (deps[file.name] || []).filter(isAvailable)
		}
	}
	const order = []
	sequencify(tasks, files.map(f => f.name), order)

	process.stdout.write(`\
-- GTFS SQL dump generated by ${pkg.name} v${pkg.version}
-- ${pkg.homepage}
\\set ON_ERROR_STOP True
CREATE EXTENSION IF NOT EXISTS postgis;
BEGIN;
\n`)

	const csv = new Stringifier({quoted: true})

	for (const name of order) {
		if (!silent) console.error(name)
		process.stdout.write(`-- ${name}\n-----------------\n\n`)

		const {file} = tasks[name]
		const {
			beforeAll,
			formatRow,
			afterAll,
		} = formatters[name]

		if ('string' === typeof beforeAll && beforeAll) {
			process.stdout.write(beforeAll)
		} else if ('function' === typeof beforeAll) {
			process.stdout.write(beforeAll(opt))
		}

		let n = 0
		for await (const row of readCsv(file)) {
			const formatted = csv.stringify(formatRow(row, opt))
			process.stdout.write(formatted + '\n')
		}

		if ('string' === typeof afterAll && afterAll) {
			process.stdout.write(afterAll + ';\n')
		} else if ('function' === typeof afterAll) {
			process.stdout.write(afterAll(opt) + ';\n')
		}
	}

	process.stdout.write(`\
COMMIT;`)
}

module.exports = convertGtfsToSql
