name: build & upload binaries
on:
  push:
    tags:
      - '*'
jobs:
  test:
    name: run tests
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: install & start PostgreSQL with PostGIS
      uses: huaxk/postgis-action@v1
      with:
        postgresql password: password
        postgresql user: postgres
        postgresql db: postgres

    - run: npm install

    - run: npm run lint
    - name: npm test
      run : npm test
      env:
        PGHOST: localhost
        PGPORT: '5432'
        PGUSER: postgres
        PGPASSWORD: password
        PGDATABASE: postgres

  binaries:
    name: build binaries & publish as GitHub release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: setup Node
      uses: actions/setup-node@v1
    - run: npm install

    - name: build binaries
      run: npm run build-binaries
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: gtfs-via-postgres@${{ github.ref }}
    - name: upload macOS binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/gtfs-via-postgres-macos
        asset_name: gtfs-via-postgres_macos
        asset_content_type: application/octet-stream
    - name: upload Linux binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/gtfs-via-postgres-linux
        asset_name: gtfs-via-postgres_linux
        asset_content_type: application/octet-stream

  docker-image:
    name: build & publish Docker image
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: build Docker image & push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          derhuerst/gtfs-via-postgres:latest
